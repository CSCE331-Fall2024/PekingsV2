package com.pekings.pos.storage;

import com.pekings.pos.util.ThrowingConsumer;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;

public abstract class Controller {

    private void performFetchQuery(String query, ThrowingConsumer<ResultSet> forEachItem, String... parameters) {
        try {
            Statement statement = conn.createStatement();
            String s = queryLoader.getQuery(query)
                    .formatted(parameters);
            ResultSet resultSet = statement.executeQuery(s);

            while (resultSet.next()) {
                forEachItem.accept(resultSet);
            }

            resultSet.close();
        } catch (Exception x) {
            throw new RuntimeException(x);
        }
    }

    private void performNonFetchQuery(String... queries) {
        try {
            Statement statement = conn.createStatement();
            for (String query : queries) {
                statement.addBatch(query);
            }

            statement.executeBatch();

            statement.close();
        } catch (Exception x) {
            throw new RuntimeException(x);
        }
    }

    private void performNonFetchQuery(ThrowingConsumer<Statement> consumer) {
        try {
            Statement statement = conn.createStatement();
            consumer.accept(statement);
            statement.close();
        } catch (Exception x) {
            throw new RuntimeException(x);
        }
    }

    private void performPreparedStatement(ThrowingConsumer<PreparedStatement> consumer, String query, int autoGeneratedKeys) {
        try {
            PreparedStatement preparedStatement = conn.prepareStatement(query, autoGeneratedKeys);
            consumer.accept(preparedStatement);
            preparedStatement.close();
        } catch (Exception x) {
            throw new RuntimeException(x);
        }
    }

}
